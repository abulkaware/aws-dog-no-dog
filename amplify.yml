version: 1.0
# env:
#   variables:
#       # Replace this with an S3 bucket in your account to code artifacts
#       S3_BUCKET: dog-no-dog-artifacts
# backend:
#   phases:
#     build:
#       commands:
#         - |
#           if [ "${AWS_BRANCH}" = "master" ]; then
#             make -C backend ENVIRONMENT=prod
#           else
#             make -C backend ENVIRONMENT=$AWS_BRANCH
#           fi
#     postBuild:
#       commands:
#         - |
#           if [ "${AWS_BRANCH}" = "master" ]; then
#             echo 'VUE_APP_ENDPOINT="'$(make --quiet ENVIRONMENT=prod -C backend endpoint)'"' > .env.production
#           else
#             echo 'VUE_APP_ENDPOINT="'$(make --quiet ENVIRONMENT=$AWS_BRANCH -C backend endpoint)'"' > .env.production
#           fi
frontend:
  phases:
    preBuild:
      commands:
        - npm ci
    build:
      commands:
        - npm run build
  artifacts:
    baseDirectory: dist
    files:
      - '**/*'
  cache:
    paths:
      - node_modules/**/*
test:
  phases:
    preTest:
      commands:
        - npm install
        - npm install wait-on mocha@5.2.0 mochawesome mochawesome-merge mochawesome-report-generator
        - 'npm start & npx wait-on http://localhost:8080'
    test:
      commands:
        - 'npx cypress run --reporter mochawesome --reporter-options "reportDir=cypress/report/mochawesome-report,overwrite=false,html=false,json=true,timestamp=mmddyyyy_HHMMss"'
    postTest:
      commands:
        - npx mochawesome-merge --reportDir cypress/report/mochawesome-report > cypress/report/mochawesome.json
  artifacts:
    baseDirectory: cypress
    configFilePath: '**/mochawesome.json'
    files:
      - '**/*.png'
      - '**/*.mp4'
